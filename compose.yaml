services:
  # PHP 8.3
  php:
    build:
      context: ./.docker/php
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    networks:
      - app_network
    environment:
      - PHP_XDEBUG_MODE=off
    depends_on:
      - database
      - redis
      - rabbitmq
      - minio
    env_file:
      - .env

  # Nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - .:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    depends_on:
      - php
    networks:
      - app_network
    env_file:
      - .env

  # Postgres 16
  database:
    image: postgres:16
    container_name: database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./.docker/postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    env_file:
      - .env

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app_network
    env_file:
      - .env

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
      - "${RABBITMQ_PORT}:5672"
    networks:
      - app_network
    env_file:
      - .env

  # MinIO (локальное S3)
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" # API MinIO
      - "9001:9001" # Web UI MinIO
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./.docker/minio_data:/data
    networks:
      - app_network

  messenger-worker:
    build:
      context: ./.docker/php
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    networks:
      - app_network
    depends_on:
      - php
      - rabbitmq
    command: php bin/console messenger:consume async --time-limit=15 --memory-limit=128M -vv
    restart: always
    env_file:
      - .env

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
